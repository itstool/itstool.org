= Basic Usage
@link[guide >index]
@desc Create a POT file from XML and create translated XML files
      using an MO file


== Extract
   [#extract]

ITS Tool will scan your XML files and generate a POT (PO template)
file. You can edit this file directly, or use tools like
$cmd(msgmerge) to merge its messages into an existing PO file.
To create a POT file, simply pass a list of XML files to
$cmd(itstool) on the command line. By default, $cmd(itstool)
simply outputs to standard output. Use the $cmd(-o) option to
specify an output file.

For example, to generate a POT file called $file(mydoc.pot) from
all the $link[>>http://projectmallard.org/](Mallard) page files
in a directory:

[screen]
itstool -o mydoc.pot *.page

Edit this file or merge it into another PO file. The messages
will mostly be simple inline XML fragments, like you would see
if you were editing the source document. ITS Tool tries hard
not to include any extra wrapper markup. You will usually only
see the sort of basic inline markup that’s used inside paragraphs.
Sometimes, you will see special XML markers. See $link[>its-and-po]
for more information on these.


== Merge
   [#merge]

ITS Tool can merge edited PO files with a source file to produce a
translated document.  Use the getttext $cmd(msgfmt) utility to convert
the PO file into an MO file. Pass the MO file to ITS Tool with the
$cmd(-m) option to create a translated XML file.

For example, the MO file $file(de.mo) for a copied or merged
German-language POT file $file(de.po) is created with:

[screen]
msgfmt de.po

Be careful! ITS Tool writes translated files in the current directory by
default. This could overwrite source files. Create a subdirectory
first, then write pages into it:

[screen]
mkdir de
itstool -m de.mo -o de/ *.page

ITS Tool has built-in rules which it combines with any ITS rules found
in the source document. Additional files of ITS rules can be added on
the command line with the $cmd(-i) option. See $link[>its-and-po] for
more information on loading ITS files.


== Join
   [#join]

ITS Tool also provides “join mode” for creating a multilingual
XML file, where multiple translations are provided using the
$code(xml:lang) attribute. When using join mode, it’s common
to maintain a monolingual version of the file along with
translations in PO files, and to build the multilingual file
that gets shipped. To join multiple translations, compile each
of them into an MO file as above, then join using the
monolingual file as a template with the following:

[screen]
itstool -j mydoc.xml.in -o mydoc.xml *.mo

ITS Tool uses a simple heuristic to determine which elements
can be repeated with the $code(xml:lang) attribute,
corresponding exactly to the outermost translation units used
in the PO files. A translation unit is a translatable element
that is not within-text and which has non-trivial
non-within-text child content. Translation units nested in
other translation units are not repeated in join mode. Their
translated content is merged into the top-level translation
unit, and that element is repeated.
